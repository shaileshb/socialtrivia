<project name="stservice" default="war">
	<property name="appengine.sdk" location="../tools/appengine-java-sdk"/>
	<import file="${appengine.sdk}/config/user/ant-macros.xml"/>

	<!-- Remote debug port for dev_appserver -->
	<property name="debug.port" value="5005"/>

	<!-- HTTP port for dev_appserver -->
	<property name="http.port" value="8080"/>

	<!-- Name of log file to write logs to -->
	<property name="log.file" value="app.log"/>

	<!-- Number of days worth of logs to retrieve -->
	<property name="log.days" value="2"/>

	<!-- Change if you like e.g. "war" better than "www" for the output -->
	<property name="war.dir" location="bin/war"/>
        <property name="http.address" value="0.0.0.0"/>
	<path id="javac.classpath">
		<pathelement location="src/WEB-INF/lib/jersey-1.3/jsr311-api-1.1.1.jar"/>
		<pathelement location="src/WEB-INF/lib/jersey-1.3/jersey-server-1.3.jar"/>
		<pathelement location="src/WEB-INF/lib/jersey-1.3/jersey-guice-1.3.jar"/>
		<pathelement location="src/WEB-INF/lib/guice-2.0/guice-2.0.jar"/>
		<pathelement location="src/WEB-INF/lib/guice-2.0/guice-servlet-2.0.jar"/>
		<pathelement location="${appengine.sdk}/lib/shared/servlet-api.jar"/>
		<pathelement location="${appengine.sdk}/lib/user/orm/jdo2-api-2.3-eb.jar" />
		<pathelement location="${appengine.sdk}/lib/user/appengine-api-1.0-sdk-1.4.3.jar" />
		
	</path>
	
	<target name="compile" description="Compile the application servlet code">
		<mkdir dir="${war.dir}/WEB-INF/classes"/>
		<mkdir dir="${war.dir}/WEB-INF/lib"/>
		<property name="javac.debug" value="false"/>
		<javac debug="${javac.debug}" includeantruntime="false" srcdir="src" destdir="${war.dir}/WEB-INF/classes">
			<classpath refid="javac.classpath" />
		</javac>
	</target>

	<path id="deploy.libs">
		<fileset dir="src/WEB-INF/lib">
			<include name="**/*.jar"/>
		</fileset>
		
		<fileset dir="${appengine.sdk}/lib/user">
			<include name="orm/*.jar" />
			<include name="appengine-api-1.0-sdk-1.4.3.jar" />
		</fileset>
	</path>
	
	<target name="war" depends="compile" description="Assemble the application directory">
		<mkdir dir="${war.dir}/WEB-INF/classes/META-INF"/>
		<copy todir="${war.dir}/WEB-INF/classes/META-INF" file="src/jdoconfig.xml"/>
		<!-- <mkdir dir="${war.dir}/WEB-INF"/> -->
		<copy todir="${war.dir}">
			<fileset dir="html">
				<exclude name="**/.svn/**"/>
				<exclude name="**/*~"/>
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF">
			<fileset dir="src/WEB-INF">
				<include name="*.xml"/>
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/lib" flatten="true">
			<path refid="deploy.libs" />
		</copy>
		<enhance_war war="${war.dir}"/>
	</target>

	<target name="war.devel" depends="compile" description="Assemble the application directory">
		<mkdir dir="${war.dir}/WEB-INF/classes/META-INF"/>
		<symlink action="delete" link="${war.dir}/html"/>

		<symlink link="${war.dir}/html" resource="../../html" overwrite="true" failonerror="false"/>
		<copy todir="${war.dir}/WEB-INF/classes/META-INF" file="src/jdoconfig.xml"/>
		<copy todir="${war.dir}/WEB-INF">
			<fileset dir="src/WEB-INF">
				<include name="*.xml"/>
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/lib" flatten="true">
			<path refid="deploy.libs" />
		</copy>
		<enhance_war war="${war.dir}"/>
	</target>

	<target name="clean" description="Force a clean slate to rebuild">
		<delete includeEmptyDirs="true"> 
		  <fileset followsymlinks="false" dir="${war.dir}">
		  </fileset>
		</delete>
	</target>

	<target name="runserver" depends="war.devel"
          description="Run the dev_appserver">
		<dev_appserver address="${http.address}" war="${war.dir}" port="${http.port}"/>
	</target>

	<target name="dev_appserver" depends="runserver"/>

	<target name="initdebug">
		<property name="javac.debug" value="true"/>
	</target>

	<target name="debug" depends="clean,initdebug,war.devel" 
          description="Launches dev_appserver with remote debugging enabled">
		<echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port ${debug.port}"/>
		<dev_appserver war="${war.dir}" port="${http.port}" address="${http.address}">
			<options>
				<arg value="--jvm_flag=-Xdebug"/>
				<arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debug.port}"/>
			</options>
		</dev_appserver>
	</target>

	<target name="update" depends="war" 
          description="Uploads the application, including indexes">
		<appcfg action="update" war="${war.dir}"/>
	</target>

	<target name="update_indexes" depends="war" 
          description="Uploads only the application's indexes">
		<appcfg action="update_indexes" war="${war.dir}"/>
	</target>

	<target name="rollback" depends="war" 
          description="Rolls back any in-progress application update">
		<appcfg action="rollback" war="${war.dir}"/>
	</target>

	<target name="request_logs" description="Downloads the application's logs">
		<appcfg action="request_logs" war="${war.dir}">
			<options>
				<arg value="--num_days=${log.days}"/>
			</options>
			<args>
				<arg value="${log.file}"/>
			</args>
		</appcfg>
	</target>

</project>
